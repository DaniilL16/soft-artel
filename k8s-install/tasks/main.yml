---
- hosts: all
  become: true
  tasks:
  - name: Install packages that allow apt to be used over HTTPS
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common

        
  - name: Install docker and its dependecies
    apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - docker.io 
 
  - name: add daniil user to docker group
    user:
     name: daniil
     group: docker

  - name: Remove swapfile from /etc/fstab
    mount:
      name: "{{ item }}"
      fstype: swap
      state: absent
    with_items:
      - swap
      - none

  - name: Disable swap
    command: swapoff -a
    when: ansible_swaptotal_mb > 0

  - name: Add an apt signing key for Kubernetes
    apt_key:
      url: https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key 
      keyring: /etc/apt/keyrings/kubernetes-apt-keyring.gpg
      state: present

  - name: Adding apt repository for Kubernetes
    apt_repository:
      repo: deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.29/deb/ / 
      state: present
      filename: kubernetes.list

  - name: Install Kubernetes binaries
    apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
        - kubelet 
        - kubeadm 
        - kubectl


  - name: Restart kubelet
    service:
      name: kubelet
      daemon_reload: yes
      state: restarted

        


- hosts: master
  become: true
  tasks:
  - name: Initialize the Kubernetes cluster using kubeadm
    shell: kubeadm init --pod-network-cidr=10.244.0.0/16
    ignore_errors: yes
     
  - name: setup kubeconfig for daniil user
    command: "{{ item }}"
    with_items:
     - mkdir -p /home/daniil/.kube
     - cp -i /etc/kubernetes/admin.conf /home/daniil/.kube/config
     - chown daniil:daniil /home/daniil/.kube/config
  - name: set kubeconfig system environment 
    lineinfile:
     path: /etc/environment
     line: export KUBECONFIG=/etc/kubernetes/admin.conf
  - name: Install cni pod network
    command: kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml 

  - name: Generate join command
    command: kubeadm token create --print-join-command
    register: join_command
  - name: Copy join command to local file
    local_action: copy content="{{ join_command.stdout_lines[0] }}" dest="./join-command"
  

- hosts: node
  become: true
  tasks:
  - name: Copy the join command to server location
    copy: src=join-command dest=/tmp/join-command.sh mode=0777

  - name: Join the node to cluster
    command: sh /tmp/join-command.sh

  
# tasks file for k8s-install
